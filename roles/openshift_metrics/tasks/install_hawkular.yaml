---
- name: generate hawkular-metrics replication controller
  template:
    src: hawkular_metrics_rc.j2
    dest: "{{ mktemp.stdout }}/templates/hawkular_metrics_rc.yaml"
- name: generate hawkular-cassandra replication controllers
  template:
    src: hawkular_cassandra_rc.j2
    dest: "{{ mktemp.stdout }}/templates/hawkular-cassandra-rc{{ item }}.yaml"
  vars:
    node: "{{ item }}"
    master: "{{ (item == '1')|string|lower }}"
  with_sequence: count={{ hawkular_cassandra_nodes }}
- name: generate hawkular-cassandra persistent volume claims
  template:
    src: pvc.j2
    dest: "{{ mktemp.stdout }}/templates/hawkular-cassandra-pvc{{ item }}.yaml"
  vars:
    obj_name: "{{ hawkular_cassandra_pv_prefix }}-{{ item }}"
    labels:
      metrics-infra: hawkular-cassandra
    access_modes:
    - ReadWriteOnce
    size: "{{ hawkular_cassandra_pv_size }}"
  with_sequence: count={{ hawkular_cassandra_nodes }}
  when: hawkular_cassandra_storage_type == 'pv'
- name: generate hawkular-cassandra persistent volume claims (dynamic)
  template:
    src: pvc.j2
    dest: "{{ mktemp.stdout }}/templates/hawkular-cassandra-pvc{{ item }}.yaml"
  vars:
    obj_name: "{{ hawkular_cassandra_pv_prefix }}-{{ item }}"
    labels:
      metrics-infra: hawkular-cassandra
    annotations:
      volume.alpha.kubernetes.io/storage-class: dynamic
    access_modes:
    - ReadWriteOnce
    size: "{{ hawkular_cassandra_pv_size }}"
  with_sequence: count={{ hawkular_cassandra_nodes }}
  when: hawkular_cassandra_storage_type == 'dynamic'
- name: test view permission for the hawkular service account
  command: >
    {{ openshift.common.client_binary }} get rolebindings
    -o jsonpath='{.items[?(@.roleRef.name == "view")].userNames}'
  register: view_rolebindings
  changed_when: false
- name: add the view role to the hawkular service account
  command: >
    '{{ openshift.common.admin_binary }}' policy
    -n '{{ metrics_project }}' add-role-to-user view
    --serviceaccount=hawkular
  when: >
    'system:serviceaccount:{{ metrics_project }}:hawkular'
    not in view_rolebindings.stdout
- name: create hawkular metrics objects
  command: >
    {{ openshift.common.client_binary }} -n '{{ metrics_project }}'
    create -f '{{ mktemp.stdout }}/templates/{{ item }}'
  with_items:
  - hawkular_metrics_secrets.yaml
  - hawkular_metrics_certificate.yaml
  - hawkular_metrics_account.yaml
  - cassandra_secrets.yaml
  - cassandra_certificate.yaml
  - metrics-hawkular-sa.yaml
  - metrics-hawkular-metrics-svc.yaml
  - hawkular_metrics_rc.yaml
  - metrics-hawkular-cassandra-svc.yaml
  - metrics-hawkular-cassandra-nodes-svc.yaml
  - metrics-cassandra-sa.yaml
- name: create pvcs and rcs
  command: >
    {{ openshift.common.client_binary }} -n '{{ metrics_project }}'
    create -f {{ item }}
  with_fileglob:
  - "{{ mktemp.stdout }}/templates/hawkular-cassandra-pvc*.yaml"
  - "{{ mktemp.stdout }}/templates/hawkular-cassandra-rc*.yaml"
- name: create the hawkular-metrics route
  command: >
    {{ openshift.common.client_binary }} -n '{{ metrics_project }}'
    create route reencrypt hawkular-metrics
    --hostname='{{ hawkular_metrics_hostname }}'
    --service=hawkular-metrics
    --dest-ca-cert='{{ mktemp.stdout }}/certs/ca.crt'
