---
- name: Validate Elasticsearch cluster size to Generate PersistentVolumeClaims
  fail: msg="The es_cluster_size may not be more then 1 less (or 0) then the number of Elasticsearch nodes already deployed"
  when: "{{openshift_logging_facts.elasticsearch.deploymentconfigs | length - es_cluster_size | abs > 1}}"

- name: Init PersistentVolumeClaims Pool
  set_fact: es_pvc_pool={{es_pvc_pool + [pvc_name]}}
  vars:
    es_pvc_pool: []
    pvc_name: "{{es_pvc_prefix}}-{{item| int +1}}"
    start: "{{openshift_logging_facts.elasticsearch.pvcs.keys()| map('regex_search',es_pvc_prefix+'.*')|select('string')|list|length}}"
  with_sequence: start={{start}} end={{es_cluster_size}}
  when:
    - es_pvc_size | search('^\d.*')
    - "{{ openshift_logging_facts.elasticsearch.deploymentconfigs.keys() | length < es_cluster_size }}"

- name: Generating PersistentVolumeClaims
  template: src=pvc.j2 dest={{mktemp.stdout}}/templates/logging-{{obj_name}}-pvc.yaml
  vars:
    obj_name: "{{claim_name}}"
    size: "{{es_pvc_size}}"
    access_modes:
      - ReadWriteOnce
  with_items: 
    - "{{es_pvc_pool}}"
  loop_control:
    loop_var: claim_name
  when: 
    - not es_pvc_dynamic
    - es_pvc_pool is defined

- name: Generating PersistentVolumeClaims - Dynamic
  template: src=pvc.j2 dest={{mktemp.stdout}}/templates/logging-{{obj_name}}-pvc.yaml
  vars:
    obj_name: "{{claim_name}}"
    annotations:
      volume.alpha.kubernetes.io/storage-class: "dynamic"
    size: "{{es_pvc_size}}"
    access_modes:
      - ReadWriteOnce
  with_items: 
    - "{{es_pvc_pool}}"
  loop_control:
    loop_var: claim_name
  when:
    - es_pvc_dynamic
    - es_pvc_pool is defined
