---
- shell: >
    echo "{{fluentd_nodeselector}}" | cut -d':' -f1
  register: fluentd_nodeselector_key

- shell: >
    echo "{{fluentd_nodeselector}}" | cut -d' ' -f2
  register: fluentd_nodeselector_value

- shell: >
    {{openshift.common.client_binary}} --config={{mktemp.stdout}}/admin.kubeconfig get node -o name | sed "s,^node/,,g"
  register: fluentd_hosts
  when: "'--all' in fluentd_hosts"

- name: stop fluentd
  include: label_node.yaml
  vars:
    host: "{{fluentd_host}}"
    label: "{{fluentd_nodeselector_key.stdout}}"
    value: "-"
  with_items: "{{fluentd_hosts.stdout}}"
  loop_control:
    loop_var: fluentd_host

- shell: >
    {{openshift.common.client_binary}} --config={{mktemp.stdout}}/admin.kubeconfig get dc -l component=es -o name -n logging
  register: es_dc

- name: stop elasticsearch
  include: scale.yaml
  vars:
    desired: 0
  with_items: "{{es_dc.stdout}}"
  loop_control:
    loop_var: object

- shell: >
    {{openshift.common.client_binary}} --config={{mktemp.stdout}}/admin.kubeconfig get dc -l component=kibana -o name -n logging
  register: kibana_dc

- name: stop kibana
  include: scale.yaml
  vars:
    desired: 0
  with_items: "{{kibana_dc.stdout}}"
  loop_control:
    loop_var: object

- shell: >
    {{openshift.common.client_binary}} --config={{mktemp.stdout}}/admin.kubeconfig get dc -l component=curator -o name -n logging
  register: curator_dc

- name: stop curator
  include: scale.yaml
  vars:
    desired: 0
  with_items: "{{curator_dc.stdout}}"
  loop_control:
    loop_var: object

- shell: >
    {{openshift.common.client_binary}} --config={{mktemp.stdout}}/admin.kubeconfig get dc -l component=es-ops -o name -n logging
  register: es_dc

- name: stop elasticsearch-ops
  include: scale.yaml
  vars:
    desired: 0
  with_items: "{{es_dc.stdout}}"
  loop_control:
    loop_var: object
  when: logging_use_ops

- shell: >
    {{openshift.common.client_binary}} --config={{mktemp.stdout}}/admin.kubeconfig get dc -l component=kibana-ops -o name -n logging
  register: kibana_dc

- name: stop kibana-ops
  include: scale.yaml
  vars:
    desired: 0
  with_items: "{{kibana_dc.stdout}}"
  loop_control:
    loop_var: object
  when: logging_use_ops

- shell: >
    {{openshift.common.client_binary}} --config={{mktemp.stdout}}/admin.kubeconfig get dc -l component=curator-ops -o name -n logging
  register: curator_dc

- name: stop curator-ops
  include: scale.yaml
  vars:
    desired: 0
  with_items: "{{curator_dc.stdout}}"
  loop_control:
    loop_var: object
  when: logging_use_ops
