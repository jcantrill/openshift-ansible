---
- name: Generating secrets for logging components
  template: src=secret.j2 dest={{mktemp.stdout}}/templates/{{secret_name}}-secret.yaml
  vars:
    secret_name: logging-{{component}}
    secrets: [{key: ca, value: "{{ ca_file | cat}}"}, {key: key, value: "{{comp_key_file | cat}}"},{key: cert, value: "{{comp_cert_file | cat}}"}]
    secret_keys: ["ca", "cert", "key"]
    ca_file: "{{mktemp.stdout}}/ca.crt"
    comp_key_file: "{{mktemp.stdout}}/system.logging.{{component}}.key"
    comp_cert_file: "{{mktemp.stdout}}/system.logging.{{component}}.crt"
  with_items:
    - kibana
    - curator
    - fluentd
  loop_control:
    loop_var: component
  when: secret_name not in openshift_logging_facts.{{component}}.secrets or
        secret_keys | difference(openshift_logging_facts.{{component}}.secrets["{{secret_name}}"]["keys"]) | length != 0

- name: Generating secrets for kibana proxy
  template: src=secret.j2 dest={{mktemp.stdout}}/templates/{{secret_name}}-secret.yaml
  vars:
    secret_name: logging-kibana-proxy
    secrets: [{key: oauth-secret, value: "{{oauth_secret.stdout}}"},{key: session-secret, value: "{{session_secret.stdout}}"},{key: server-key, value: "{{kibana_key_file | cat}}"},{key: server-cert, value: "{{kibana_cert_file | cat}}"},{key: server-tls, value: "{{server_tls_file | cat}}"}]
    secret_keys: ["server-tls.json", "server-key", "session-secret", "oauth-secret", "server-cert"]
    kibana_key_file: "{{mktemp.stdout}}/kibana-internal.key"
    kibana_cert_file: "{{mktemp.stdout}}/kibana-internal.crt"
    server_tls_file: "{{mktemp.stdout}}/server-tls.json"
  when: secret_name not in openshift_logging_facts.kibana.secrets or
        secret_keys | difference(openshift_logging_facts.kibana.secrets["{{secret_name}}"]["keys"]) | length != 0

- name: Generating secrets for elasticsearch
  command: "{{openshift.common.client_binary}} --config={{ mktemp.stdout }}/admin.kubeconfig secrets new {{secret_name}} key={{mktemp.stdout}}/logging-es.jks truststore={{mktemp.stdout}}/truststore.jks searchguard.key={{mktemp.stdout}}/elasticsearch.jks searchguard.truststore={{mktemp.stdout}}/truststore.jks admin-key={{mktemp.stdout}}/system.admin.key admin-cert={{mktemp.stdout}}/system.admin.crt admin-ca={{mktemp.stdout}}/ca.crt admin.jks={{mktemp.stdout}}/system.admin.jks -o yaml"
  vars:
     secret_name: logging-elasticsearch
     secret_keys: ["admin-cert", "searchguard.key", "admin-ca", "key", "truststore", "admin-key"]
  register: logging_es_secret
  when: secret_name not in openshift_logging_facts.elasticsearch.secrets or
        secret_keys | difference(openshift_logging_facts.elasticsearch.secrets["{{secret_name}}"]["keys"]) | length != 0

- copy: content="{{logging_es_secret.stdout}}" dest={{mktemp.stdout}}/templates/logging-elasticsearch-secret.yaml
  when: logging_es_secret.stdout is defined
