---
- name: Create temp directory for doing work in
  command: mktemp -d /tmp/openshift-logging-ansible-XXXXXX
  register: mktemp
  changed_when: False
  check_mode: no

- debug: msg="Created temp dir {{mktemp.stdout}}"

- name: Copy the admin client config(s)
  command: >
    cp {{ openshift_master_config_dir }}/admin.kubeconfig {{ mktemp.stdout }}/admin.kubeconfig
  changed_when: False
  check_mode: no

- name: Gather OpenShift Logging Facts
  openshift_logging_facts:
    oc_bin: "{{openshift.common.client_binary}}"
    admin_kubeconfig: "{{mktemp.stdout}}/admin.kubeconfig"
    logging_namespace: "{{logging_namespace}}"
  check_mode: no

- name: Install logging
  include: "{{ role_path }}/tasks/install_{{ install_component }}.yaml"
  when: openshift_hosted_logging_install | default(true) | bool
  with_items:
    - support
    - elasticsearch
    - kibana
    - curator
    - fluentd
  loop_control:
    loop_var: install_component

- name: Creating API objects from generated templates
  command: >
    {{ openshift.common.client_binary }} --config={{ mktemp.stdout }}/admin.kubeconfig apply -f {{file}} -n {{logging_namespace}}
  with_fileglob:
    - "{{mktemp.stdout}}/templates/*.yaml"
  loop_control:
    loop_var: file
  when: not ansible_check_mode

- name: Printing out objects to create
  debug: msg="{{lookup('file', file)|quote}}"
  with_fileglob:
    - "{{mktemp.stdout}}/templates/*.yaml"
  loop_control:
    loop_var: file
  when: ansible_check_mode

- name: Scaling up cluster
  include: start_cluster.yaml

- name: Delete temp directory
  file:
    name: "{{ mktemp.stdout }}"
    state: absent
  changed_when: False
  check_mode: no
